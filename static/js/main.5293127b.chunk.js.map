{"version":3,"sources":["Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ErrorBoundary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAuBeA,EApBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,U,OCgBLC,EAlBG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,sBAAKC,UAAU,8DAAf,UACE,iCACE,sBAAMA,UAAU,kCAAhB,SACE,cAAC,IAAD,CAAYA,UAAU,8BAG1B,uBACEA,UAAU,2FACVC,KAAK,OACLC,YAAY,YACZC,SAAUJ,QCJHK,EARA,SAACC,GACd,OACE,qBAAKL,UAAU,oGAAf,SACGK,EAAMC,YCiBEC,E,kDApBb,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKP,MAAMC,a,GAhBKQ,aC4CZC,E,kDAxCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACXZ,OAAQ,GACRsB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKZ,SAAS,CAAEjB,OAAQ6B,S,oBAO5C,WAAU,IAAD,OACDC,EAAiBd,KAAKJ,MAAMZ,OAAO+B,QAAO,SAAAC,GAC9C,OAAOA,EAAMC,KAAKC,cAAcC,SAAS,EAAKvB,MAAMU,YAAYY,kBAElE,OAAiC,IAA7BlB,KAAKJ,MAAMZ,OAAOoC,OACb,yCAGL,sBAAKhC,UAAU,2FAAf,UACE,oBAAIA,UAAU,6CAAd,yBACA,cAAC,EAAD,CAAWD,aAAca,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAACiB,EAAD,UACE,cAAC,EAAD,CAAUrC,OAAQ8B,e,GAhCdZ,aCOHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5293127b.chunk.js","sourcesContent":["import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n  if (true) {\n    throw new Error('NOOOO');\n  }\n  return (\n    <div className='flex flex-wrap place-content-center'>\n      {robots.map(user => {\n        return (\n          <Card \n            key={user.id} \n            id={user.id} \n            name={user.name} \n            email={user.email}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default CardList","import React from 'react'\nimport { SearchIcon } from '@heroicons/react/outline'\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"flex items-center rounded-full border-grey-light border m-4\">\n      <button>\n        <span className=\"flex items-center text-grey p-2\">\n          <SearchIcon className=\"h-5 w-5 text-gray-900\"/>\n        </span>\n      </button>\n      <input \n        className=\"w-auto rounded mr-4 bg-transparent text-gray-900 placeholder-gray-300 focus:outline-none\" \n        type=\"text\" \n        placeholder=\"Search...\"\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox","import React from 'react'\n\n\nconst Scroll = (props) => {\n  return (\n    <div className='overflow-y-auto border-gray-900 border-t-2 flex flex-grow place-items-start justify-center w-full'>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops That is not good!</h1>\n    }\n    return this.props.children\n  }\n}\n\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react'\nimport CardList from '../Components/CardList'\nimport SearchBox from '../Components/SearchBox'\nimport Scroll from '../Components/Scroll'\nimport ErrorBoundary from '../Components/ErrorBoundary'\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => {this.setState({ robots: users})});\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  }\n  \n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    });\n    if (this.state.robots.length === 0) {\n      return <h1>Loading</h1>\n    } else {\n      return (\n        <div className='bg-gradient-to-r from-indigo-400 to-green-800 w-full h-screen flex flex-col items-center'>\n          <h1 className='uppercase text-4xl p-2 text-green-400 mt-4'>Robofriends</h1>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App'\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}